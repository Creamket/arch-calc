{"version":3,"sources":["redux/types.js","redux/actions.js","components/BeamCalculator/BeamCharacteristic.js","components/BeamCalculator/BeamMaterial.js","components/BeamCalculator/BeamResult.js","components/BeamCalculator/ProtectiveLayer.js","components/BeamCalculator/Reinforcement.js","components/BeamCalculator.js","App.js","reportWebVitals.js","redux/beamReducer.js","redux/rootReducer.js","index.js"],"names":["CHANGE_VALUE","changeValue","key","value","type","payload","mapDispatchToProps","connect","state","scheme","beam","loadQInput","loadQ","widthBInput","widthB","heightHInput","heightH","lengthLInput","lengthL","inputHandler","event","parseFloat","target","name","className","htmlFor","id","aria-label","onChange","min","placeholder","step","concreteType","armatureType","parseInt","layerC","protectiveLayerC","Rb","Rs","result","armatureN","armatureBelow","class","onClick","h0","M","As","Math","sqrt","protectiveLayerC1","title","isExtra","isExtraArm","armatureAbove","checked","align","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rooReducer","combineReducers","action","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03409d01.chunk.js","sourcesContent":["export const CHANGE_VALUE = 'BEAM/CHANGE_VALUE'\r\n","import { CHANGE_VALUE } from './types'\r\n\r\nexport function changeValue(key, value) {\r\n  return {\r\n    type: CHANGE_VALUE,\r\n    payload: [key, value],\r\n  }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { changeValue } from '../../redux/actions'\r\n\r\nconst BeamCharacteristic = ({ loadQInput, widthBInput, heightHInput, lengthLInput, scheme, changeValue }) => {\r\n  const inputHandler = (event) => {\r\n    const value = parseFloat(event.target.value)\r\n    changeValue([event.target.name], value)\r\n  }\r\n\r\n  return (\r\n    <div className='col-4'>\r\n      <div className='card bg-dark'>\r\n        <div className='card-body'>\r\n          <h5 className='card-title'>Характеристика балки</h5>\r\n          <ul className='list-group list-group-flush'>\r\n            <li className='list-group-item form-item'>\r\n              <div className='row justify-content-between'>\r\n                <label htmlFor='scheme' className='col-5 col-form-label col-form-label-sm'>\r\n                  Схема:\r\n                </label>\r\n                <div className='col-7'>\r\n                  <select\r\n                    id='scheme'\r\n                    value={scheme}\r\n                    className='form-select form-select-sm'\r\n                    aria-label='Scheme select'\r\n                    name='scheme'\r\n                    onChange={inputHandler}>\r\n                    <option value='1'>Шарнир-Шарнир</option>\r\n                    <option value='2'>Свободный конец</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className='list-group-item form-item'>\r\n              <div className='row justify-content-between'>\r\n                <label htmlFor='loadQInput' className='col-5 col-form-label col-form-label-sm'>\r\n                  Нагрузка на балку q\r\n                </label>\r\n                <div className='col-7'>\r\n                  <div className='input-group input-group-sm'>\r\n                    <input\r\n                      type='number'\r\n                      min='0'\r\n                      className='form-control'\r\n                      id='loadQInput'\r\n                      placeholder='Введите значение'\r\n                      value={loadQInput}\r\n                      name='loadQ'\r\n                      onChange={inputHandler}\r\n                    />\r\n                    <span className='input-group-text'>кг/м</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className='list-group-item form-item'>\r\n              <div className='row justify-content-between'>\r\n                <label htmlFor='widthBInput' className='col-5 col-form-label col-form-label-sm'>\r\n                  Ширина сечения b\r\n                </label>\r\n                <div className='col-7'>\r\n                  <div className='input-group input-group-sm'>\r\n                    <input\r\n                      type='number'\r\n                      min='0'\r\n                      step='0.01'\r\n                      className='form-control'\r\n                      id='widthBInput'\r\n                      placeholder='Введите значение'\r\n                      value={widthBInput}\r\n                      name='widthB'\r\n                      onChange={inputHandler}\r\n                    />\r\n                    <span className='input-group-text'>м</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className='list-group-item form-item'>\r\n              <div className='row justify-content-between'>\r\n                <label htmlFor='heightHInput' className='col-5 col-form-label col-form-label-sm'>\r\n                  Высота сечения h\r\n                </label>\r\n                <div className='col-7'>\r\n                  <div className='input-group input-group-sm'>\r\n                    <input\r\n                      type='number'\r\n                      min='0'\r\n                      step='0.01'\r\n                      className='form-control'\r\n                      id='heightHInput'\r\n                      placeholder='Введите значение'\r\n                      value={heightHInput}\r\n                      name='heightH'\r\n                      onChange={inputHandler}\r\n                    />\r\n                    <span className='input-group-text'>м</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className='list-group-item form-item'>\r\n              <div className='row justify-content-between'>\r\n                <label htmlFor='lengthLInput' className='col-5 col-form-label col-form-label-sm'>\r\n                  Длина балки L\r\n                </label>\r\n                <div className='col-7'>\r\n                  <div className='input-group input-group-sm'>\r\n                    <input\r\n                      type='number'\r\n                      min='0'\r\n                      step='0.01'\r\n                      className='form-control'\r\n                      id='lengthLInput'\r\n                      placeholder='Введите значение'\r\n                      value={lengthLInput}\r\n                      name='lengthL'\r\n                      onChange={inputHandler}\r\n                    />\r\n                    <span className='input-group-text'>м</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    scheme: state.beam.scheme,\r\n    loadQInput: state.beam.loadQ,\r\n    widthBInput: state.beam.widthB,\r\n    heightHInput: state.beam.heightH,\r\n    lengthLInput: state.beam.lengthL,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeValue,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BeamCharacteristic)\r\n","import { connect } from 'react-redux'\r\nimport { changeValue } from '../../redux/actions'\r\n\r\nconst BeamMaterial = ({ concreteType, armatureType, changeValue }) => {\r\n  const inputHandler = (event) => {\r\n    const value = parseInt(event.target.value)\r\n    changeValue([event.target.name], value)\r\n  }\r\n\r\n  return (\r\n    <div className='col-4'>\r\n      <div className='card bg-dark'>\r\n        <div className='card-body'>\r\n          <h5 className='card-title'>Материал балки</h5>\r\n          <ul className='list-group list-group-flush'>\r\n            <li className='list-group-item form-item'>\r\n              <div className='row justify-content-between'>\r\n                <label htmlFor='concreteType' className='col-5 col-form-label col-form-label-sm'>\r\n                  Класс бетона:\r\n                </label>\r\n                <div className='col-7'>\r\n                  <select\r\n                    id='concreteType'\r\n                    value={concreteType}\r\n                    className='form-select form-select-sm'\r\n                    aria-label='Concrete select'\r\n                    name='concreteType'\r\n                    onChange={inputHandler}>\r\n                    <option value='610000'>C8/10 или B10</option>\r\n                    <option value='1170000'>C16/20 или B20</option>\r\n                    <option value='1480000'>C20/25 или B25</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className='list-group-item form-item'>\r\n              <div className='row justify-content-between'>\r\n                <label htmlFor='armatureType' className='col-5 col-form-label col-form-label-sm'>\r\n                  Класс арматуры:\r\n                </label>\r\n                <div className='col-7'>\r\n                  <select\r\n                    id='armatureType'\r\n                    value={armatureType}\r\n                    className='form-select form-select-sm'\r\n                    aria-label='Armature select'\r\n                    name='armatureType'\r\n                    onChange={inputHandler}>\r\n                    <option value='21900000'>Гладкая S240, A240</option>\r\n                    <option value='36200000'>Периодического профиля S400, A400</option>\r\n                    <option value='44300000'>Периодического профиля S500, A500</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    concreteType: state.beam.concreteType,\r\n    armatureType: state.beam.armatureType,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeValue,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BeamMaterial)\r\n","import { connect } from 'react-redux'\r\nimport { changeValue } from '../../redux/actions'\r\n\r\nconst BeamResult = ({ result, changeValue, heightH, layerC, loadQ, lengthL, Rb, widthB, Rs, armatureN, scheme }) => {\r\n  const resultHandler = () => {\r\n    switch (scheme) {\r\n      case 1:\r\n        loadQ = loadQ + widthB * heightH * 2500\r\n        const h0 = heightH - layerC\r\n        const M = (loadQ * lengthL * lengthL) / 8\r\n        const As = (0.9 * Rb * widthB * (1 - Math.sqrt(1 - 2 * (M / (Rb * widthB * h0 * h0)))) * h0) / Rs\r\n        const newResult = (As * 10000) / armatureN\r\n        changeValue(['result'], newResult)\r\n        break\r\n      default:\r\n        changeValue(['result'], 'Лоле')\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='col-4 align-self-end'>\r\n      <div className='card bg-dark'>\r\n        <div className='card-body'>\r\n          <h5 className='card-title'>Результат:</h5>\r\n          <div className='row'>\r\n            <div className='col-12'>{result}</div>\r\n            <div className='col mt-2'>\r\n              <button type='button' class='btn btn-success' onClick={resultHandler}>\r\n                Подсчитать!\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    scheme: state.beam.scheme,\r\n    loadQ: state.beam.loadQ,\r\n    widthB: state.beam.widthB,\r\n    heightH: state.beam.heightH,\r\n    lengthL: state.beam.lengthL,\r\n    layerC: state.beam.protectiveLayerC,\r\n    Rb: state.beam.concreteType,\r\n    Rs: state.beam.armatureType,\r\n    result: state.beam.result,\r\n    armatureN: state.beam.armatureBelow,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeValue,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BeamResult)\r\n","import { connect } from 'react-redux'\r\nimport { changeValue } from '../../redux/actions'\r\n\r\nconst ProtectiveLayer = ({ title, name, changeValue, protectiveLayerC, protectiveLayerC1 }) => {\r\n  const inputHandler = (event) => {\r\n    changeValue([event.target.name], event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className='col-4'>\r\n      <div className='card bg-dark'>\r\n        <div className='card-body'>\r\n          <h5 className='card-title'>Величина защитного слоя \"{title}\"</h5>\r\n          <ul className='list-group list-group-flush'>\r\n            <li className='list-group-item form-item'>\r\n              <div className='row justify-content-between'>\r\n                <label htmlFor={name} className='col-5 col-form-label col-form-label-sm'>\r\n                  Защитный слой\r\n                </label>\r\n                <div className='col-7'>\r\n                  <div className='input-group input-group-sm'>\r\n                    <input\r\n                      type='number'\r\n                      className='form-control'\r\n                      id={name}\r\n                      min='0'\r\n                      step='0.01'\r\n                      placeholder='кг/м'\r\n                      value={name === 'protectiveLayerC' ? protectiveLayerC : protectiveLayerC1}\r\n                      name={name}\r\n                      onChange={inputHandler}\r\n                    />\r\n                    <span className='input-group-text'>м</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    protectiveLayerC: state.beam.protectiveLayerC,\r\n    protectiveLayerC1: state.beam.protectiveLayerC1,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeValue,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProtectiveLayer)\r\n","import { connect } from 'react-redux'\r\nimport { changeValue } from '../../redux/actions'\r\n\r\nconst Reinforcement = ({ changeValue, isExtra, armatureAbove, armatureBelow, scheme }) => {\r\n  const inputHandler = (event) => {\r\n    const value =\r\n      event.target.type === 'checkbox'\r\n        ? event.target.checked\r\n        : event.type === 'change'\r\n        ? parseInt(event.target.value)\r\n        : event.target.value\r\n    changeValue([event.target.name], value)\r\n  }\r\n\r\n  return (\r\n    <div className='col-4'>\r\n      <div className='card bg-dark'>\r\n        <div className='card-body'>\r\n          <h5 className='card-title'>Армирование</h5>\r\n          <ul className='list-group list-group-flush'>\r\n            <li className='list-group-item form-item'>\r\n              <div className='row justify-content-between'>\r\n                <label htmlFor='numberOfArmature' className='col-5 col-form-label col-form-label-sm'>\r\n                  Кол-во арматуры {scheme === 1 ? 'снизу' : 'сверху'}:\r\n                </label>\r\n                <div className='col-7'>\r\n                  <select\r\n                    id='numberOfArmature'\r\n                    value={scheme === 1 ? armatureBelow : armatureAbove}\r\n                    className='form-select form-select-sm'\r\n                    aria-label='Armature select'\r\n                    name={scheme === 1 ? 'armatureBelow' : 'armatureAbove'}\r\n                    onChange={inputHandler}>\r\n                    <option value='1'>1 арматура</option>\r\n                    <option value='2'>2 арматуры</option>\r\n                    <option value='3'>3 арматуры</option>\r\n                    <option value='4'>4 арматуры</option>\r\n                    <option value='5'>5 арматур</option>\r\n                    <option value='6'>6 арматур</option>\r\n                    <option value='7'>7 арматур</option>\r\n                    <option value='8'>8 арматур</option>\r\n                    <option value='9'>9 арматур</option>\r\n                    <option value='10'>10 арматур</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className='list-group-item form-item'>\r\n              <div className='form-check'>\r\n                <input\r\n                  className='form-check-input'\r\n                  onChange={inputHandler}\r\n                  type='checkbox'\r\n                  id='isExtra'\r\n                  name='isExtraArm'\r\n                  checked={isExtra}\r\n                />\r\n                <label className='form-check-label' htmlFor='isExtra'>\r\n                  + арматура {scheme === 2 ? 'снизу' : 'сверху'}\r\n                </label>\r\n              </div>\r\n            </li>\r\n            {isExtra === true && (\r\n              <li className='list-group-item form-item'>\r\n                <div className='row justify-content-between'>\r\n                  <label htmlFor='numberOfArmature1' className='col-5 col-form-label col-form-label-sm'>\r\n                    Кол-во арматуры {scheme === 2 ? 'снизу' : 'сверху'}:\r\n                  </label>\r\n                  <div className='col-7'>\r\n                    <select\r\n                      id='numberOfArmature1'\r\n                      value={scheme === 2 ? armatureBelow : armatureAbove}\r\n                      className='form-select form-select-sm'\r\n                      aria-label='Armature select'\r\n                      name={scheme === 2 ? 'armatureBelow' : 'armatureAbove'}\r\n                      onChange={inputHandler}>\r\n                      <option value='1'>1 арматура</option>\r\n                      <option value='2'>2 арматуры</option>\r\n                      <option value='3'>3 арматуры</option>\r\n                      <option value='4'>4 арматуры</option>\r\n                      <option value='5'>5 арматур</option>\r\n                      <option value='6'>6 арматур</option>\r\n                      <option value='7'>7 арматур</option>\r\n                      <option value='8'>8 арматур</option>\r\n                      <option value='9'>9 арматур</option>\r\n                      <option value='10'>10 арматур</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isExtra: state.beam.isExtraArm,\r\n    armatureBelow: state.beam.armatureBelow,\r\n    armatureAbove: state.beam.armatureAbove,\r\n    scheme: state.beam.scheme,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeValue,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reinforcement)\r\n","import { connect } from 'react-redux'\r\nimport BeamCharacteristic from './BeamCalculator/BeamCharacteristic'\r\nimport BeamMaterial from './BeamCalculator/BeamMaterial'\r\nimport BeamResult from './BeamCalculator/BeamResult'\r\nimport ProtectiveLayer from './BeamCalculator/ProtectiveLayer'\r\nimport Reinforcement from './BeamCalculator/Reinforcement'\r\n\r\nconst BeamCalculator = ({ isExtra }) => {\r\n  return (\r\n    <form>\r\n      <h2 align='center'>Расчет железобетонной балки</h2>\r\n      <div className='row'>\r\n        <BeamMaterial />\r\n        <BeamCharacteristic />\r\n        <Reinforcement />\r\n        <ProtectiveLayer title='c' name='protectiveLayerC' />\r\n        <BeamResult />\r\n        {isExtra === true && <ProtectiveLayer title='c1' name='protectiveLayerC1' />}\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isExtra: state.beam.isExtraArm,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BeamCalculator)\r\n","import './App.css'\nimport BeamCalculator from './components/BeamCalculator'\n\nfunction App() {\n  return (\n    <div className='container pt-3'>\n      <BeamCalculator />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CHANGE_VALUE } from './types'\r\n\r\nconst initialState = {\r\n  scheme: 1,\r\n  loadQ: 1400,\r\n  widthB: 0.2,\r\n  heightH: 0.5,\r\n  lengthL: 6,\r\n  concreteType: 610000,\r\n  armatureType: 21900000,\r\n  armatureBelow: 1,\r\n  armatureAbove: 1,\r\n  isExtraArm: false,\r\n  protectiveLayerC: 0.02,\r\n  protectiveLayerC1: 0.02,\r\n  result: 'Введите данные и нажмите на кнопку, чтобы увидеть результат!',\r\n}\r\n\r\nexport const beamReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_VALUE:\r\n      return {\r\n        ...state,\r\n        [action.payload[0]]: action.payload[1],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { beamReducer } from './beamReducer'\r\n\r\nexport const rooReducer = combineReducers({\r\n  beam: beamReducer,\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { compose, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { rooReducer } from './redux/rootReducer'\n\nconst store = createStore(\n  rooReducer,\n  compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n)\n\nconst app = (\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}